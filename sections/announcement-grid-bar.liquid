{%- if section.blocks.size > 0 -%}
  {% comment %} Load the fontawesome kits {% endcomment %}
    <script src="https://kit.fontawesome.com/5adceddaa0.js" crossorigin="anonymous"></script>
  {%- comment -%}
  ------------------------------------------------------------------------------------------------------------------------
  CSS
  ------------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}
  <style>
    :root {
      --sticky-announcement-bar-enabled: {%- if section.settings.enable_sticky -%}1{% else %}0{% endif %};
    }

    {%- if section.settings.enable_sticky -%}
      #shopify-section-{{ section.id }} {
        position: sticky;
        top: 0;
        z-index: 20;
      }

      .shopify-section--header ~ #shopify-section-{{ section.id }} {
        top: calc(var(--sticky-header-enabled, 0) * var(--header-height, 0px));
      }
    {%- endif -%}

    #section-{{  section.id }} marquee-text {
        display: none;
    }
  
    .announcement__icon-text i {
        margin-right: 5px;
    }

    .announcement-bar-grid__wrapper {
        display: grid;
        grid-template-columns: repeat(5, auto);
    }

    .announcement-bar-grid__wrapper .announcement__icon-text i {
        margin-right: 10px;
        font-size: 18px;
    }

    @media screen and (max-width: 1023px) {
      #section-{{  section.id }} marquee-text {
        display: grid;
      }
      #section-{{  section.id }} .container {
        display: none;
      }
    }
  </style>

  {%- comment -%}
  ------------------------------------------------------------------------------------------------------------------------
  LIQUID
  ------------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  <height-observer variable="announcement-bar">
    <div {% render 'surface', class: 'announcement-bar', background_gradient: section.settings.background_gradient, background: section.settings.background, text_color: section.settings.text_color %} id="section-{{  section.id }}">

        <marquee-text scrolling-speed="{{ section.settings.scrolling_speed }}" class="announcement-bar__scrolling-list">
          {%- capture content -%}
            {%- for block in section.blocks -%}
              <p class="bold{% if block.settings.url == blank %} announcement__icon-text{% endif %} {{ section.settings.text_size }}" {{ block.shopify_attributes }}>
                {%- if block.settings.url != blank -%}
                  <a href="{{ block.settings.url }}" class="announcement__icon-text">
                      <i class="{{ block.settings.icon_class }}"></i>
                      {{ block.settings.text | escape }}
                  </a>
                {%- else -%}
                  <i class="{{ block.settings.icon_class }}"></i>
                  {{ block.settings.text | escape }}
                {%- endif -%}
              </p>

              <span class="shape--sm"></span>
            {%- endfor -%}
          {%- endcapture -%}

          {%- for i in (1..10) -%}
            <span class="announcement-bar__item" {% unless forloop.first %}aria-hidden="true"{% endunless %}>
              {{- content -}}
            </span>
          {%- endfor -%}
        </marquee-text>

        <div class="container">
          <div class="announcement-bar-grid__wrapper {% if section.blocks.size == 1 %}justify-center{% else %}justify-between{% endif %}">
              {%- for block in section.blocks -%}
                <p class="bold {{ section.settings.text_size }} {% if block.settings.url == blank %} announcement__icon-text{% endif %}" {{ block.shopify_attributes }}>
                  {%- if block.settings.url != blank -%}
                    <a href="{{ block.settings.url }}" class="announcement__icon-text">
                      <i class="{{ block.settings.icon_class }}"></i>
                      {{ block.settings.text | escape }}
                    </a>
                  {%- else -%}
                    <i class="{{ block.settings.icon_class }}"></i>
                    {{ block.settings.text | escape }}
                  {%- endif -%}
                </p>
              {%- endfor -%}
          </div>
        </div>

    </div>
  </height-observer>

  <script>
    document.documentElement.style.setProperty('--announcement-bar-height', Math.round(document.getElementById('shopify-section-{{ section.id }}').clientHeight) + 'px');
  </script>
{%- endif -%}


{% schema %}
{
  "name": "Announcement Grid Bar",
  "class": "shopify-section--announcement-bar",
  "tag": "aside",
  "max_blocks": 5,
  "blocks": [
    {
      "type": "message",
      "name": "Message",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Announce something here"
        },
        {
          "type": "url",
          "id": "url",
          "label": "Link"
        },
        {
            "type": "text",
            "id": "icon_class",
            "label": "Icon Class",
            "default": "fa-solid fa-user",
            "info": "Use Fontawesome icon class, i.g., fa-solid fa-user"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky",
      "label": "Enable sticky bar",
      "default": false
    },
    {
      "type": "select",
      "id": "text_size",
      "label": "Text size",
      "options": [
        {
          "value": "text-xxs",
          "label": "X-Small"
        },
        {
          "value": "text-xs",
          "label": "Small"
        },
        {
          "value": "text-base",
          "label": "Medium"
        },
        {
          "value": "text-lg",
          "label": "Large"
        }
      ],
      "default": "text-xs"
    },
    {
      "type": "range",
      "id": "scrolling_speed",
      "label": "Scrolling speed",
      "min": 10,
      "max": 30,
      "step": 1,
      "unit": "ms",
      "default": 20
    },
    {
      "type": "header",
      "content": "Colors",
      "info": "Gradient replaces solid colors when set."
    },
    {
      "type": "color",
      "id": "background",
      "label": "Background"
    },
    {
      "type": "color_background",
      "id": "background_gradient",
      "label": "Background gradient"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text"
    }
  ]
}
{% endschema %}